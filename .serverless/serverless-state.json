{
  "service": {
    "service": "fireplatform",
    "serviceObject": {
      "name": "fireplatform"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "stage": "dev",
      "region": "eu-west-2",
      "profile": "serverlessuser",
      "environment": {
        "user_pool_id": {
          "Ref": "CognitoUserPool"
        },
        "client_id": {
          "Ref": "CognitoUserPoolClient"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "cognito-idp:AdminInitiateAuth",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminSetUserPassword"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutBucketPolicy"
          ],
          "Resource": "arn:aws:s3:::dev-fireplatform-ui/*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "LoginUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-loginUser"
            }
          },
          "RegisterUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-registerUser"
            }
          },
          "AuthorizeUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-authorizeUser"
            }
          },
          "ResendVerificationCodeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-resendVerificationCode"
            }
          },
          "ForgotPasswordLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-forgotPassword"
            }
          },
          "ResetPasswordLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-resetPassword"
            }
          },
          "LogoutUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fireplatform-dev-logoutUser"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "fireplatform",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/fireplatform-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/fireplatform-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "fireplatform",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LoginUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/loginUser.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-loginUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginUserLogGroup"
            ]
          },
          "RegisterUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/registerUser.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-registerUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RegisterUserLogGroup"
            ]
          },
          "AuthorizeUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/authorizeUser.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-authorizeUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthorizeUserLogGroup"
            ]
          },
          "ResendVerificationCodeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/resendVerificationCode.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-resendVerificationCode",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ResendVerificationCodeLogGroup"
            ]
          },
          "ForgotPasswordLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/forgotPassword.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-forgotPassword",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ForgotPasswordLogGroup"
            ]
          },
          "ResetPasswordLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/resetPassword.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-resetPassword",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ResetPasswordLogGroup"
            ]
          },
          "LogoutUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z/fireplatform.zip"
              },
              "Handler": "server/handlers/cognito/logoutUser.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "fireplatform-dev-logoutUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "user_pool_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"user_pool_id\"]"
                  },
                  "client_id": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"client_id\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LogoutUserLogGroup"
            ]
          },
          "LoginUserLambdaVersionspP62S4vqKMvnuB8W4vN3hbP8JnXgl02W8vSeMDg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginUserLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "RegisterUserLambdaVersionhCCgsyRML9eKYnbKyzBQbBke2bNAJxf1iQFlaeJG2k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterUserLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "AuthorizeUserLambdaVersioniqilTEA7CeBGtbmzKwEZFm7Vt14kmedQL3xcUyFNHc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizeUserLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "ResendVerificationCodeLambdaVersionf57JKjVHP0dPRM1QsVOfyhPu1WeaHXqL3Gh7uKt8g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResendVerificationCodeLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "ForgotPasswordLambdaVersion2wLmG6OFdQw3R3NYSjnnV0u6IP1UPNYJ7iYYrE9CFY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ForgotPasswordLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "ResetPasswordLambdaVersionfQ2hIkIZktTPENOJXZakLvmbnTxct1iYilJGyXEFNM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResetPasswordLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "LogoutUserLambdaVersionrBzV9dbJ9lN0gcWXMsn0D66Mu0quJi0fcApvxIqoFPo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LogoutUserLambdaFunction"
              },
              "CodeSha256": "XbCKGFiSUp2TAqFw9ESZYIGcW+s37s7fK6D1cID/i5c="
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "dev-fireplatform-ui"
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "dev-user-pool",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Schema": [
                {
                  "Name": "given_name",
                  "AttributeDataType": "String",
                  "Mutable": true
                },
                {
                  "Name": "family_name",
                  "AttributeDataType": "String",
                  "Mutable": true
                },
                {
                  "Name": "email",
                  "AttributeDataType": "String",
                  "Mutable": false
                },
                {
                  "Name": "password",
                  "AttributeDataType": "String",
                  "Mutable": true
                }
              ]
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "dev-user-pool-client",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH",
                "ALLOW_USER_PASSWORD_AUTH"
              ],
              "GenerateSecret": false
            }
          },
          "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "lambda-execution-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-ServerlessDeploymentBucketName"
            }
          },
          "LoginUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginUserLambdaVersionspP62S4vqKMvnuB8W4vN3hbP8JnXgl02W8vSeMDg"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-LoginUserLambdaFunctionQualifiedArn"
            }
          },
          "RegisterUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterUserLambdaVersionhCCgsyRML9eKYnbKyzBQbBke2bNAJxf1iQFlaeJG2k"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-RegisterUserLambdaFunctionQualifiedArn"
            }
          },
          "AuthorizeUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizeUserLambdaVersioniqilTEA7CeBGtbmzKwEZFm7Vt14kmedQL3xcUyFNHc"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-AuthorizeUserLambdaFunctionQualifiedArn"
            }
          },
          "ResendVerificationCodeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResendVerificationCodeLambdaVersionf57JKjVHP0dPRM1QsVOfyhPu1WeaHXqL3Gh7uKt8g"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-ResendVerificationCodeLambdaFunctionQualifiedArn"
            }
          },
          "ForgotPasswordLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ForgotPasswordLambdaVersion2wLmG6OFdQw3R3NYSjnnV0u6IP1UPNYJ7iYYrE9CFY"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-ForgotPasswordLambdaFunctionQualifiedArn"
            }
          },
          "ResetPasswordLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResetPasswordLambdaVersionfQ2hIkIZktTPENOJXZakLvmbnTxct1iYilJGyXEFNM"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-ResetPasswordLambdaFunctionQualifiedArn"
            }
          },
          "LogoutUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LogoutUserLambdaVersionrBzV9dbJ9lN0gcWXMsn0D66Mu0quJi0fcApvxIqoFPo"
            },
            "Export": {
              "Name": "sls-fireplatform-dev-LogoutUserLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "s3Deploy": {
        "buckets": [
          {
            "name": "dev-fireplatform-ui"
          }
        ]
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-s3-deploy"
    ],
    "pluginsData": {},
    "functions": {
      "loginUser": {
        "handler": "server/handlers/cognito/loginUser.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-loginUser",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "LoginUserLambdaVersionspP62S4vqKMvnuB8W4vN3hbP8JnXgl02W8vSeMDg"
      },
      "registerUser": {
        "handler": "server/handlers/cognito/registerUser.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-registerUser",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "RegisterUserLambdaVersionhCCgsyRML9eKYnbKyzBQbBke2bNAJxf1iQFlaeJG2k"
      },
      "authorizeUser": {
        "handler": "server/handlers/cognito/authorizeUser.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-authorizeUser",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AuthorizeUserLambdaVersioniqilTEA7CeBGtbmzKwEZFm7Vt14kmedQL3xcUyFNHc"
      },
      "resendVerificationCode": {
        "handler": "server/handlers/cognito/resendVerificationCode.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-resendVerificationCode",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ResendVerificationCodeLambdaVersionf57JKjVHP0dPRM1QsVOfyhPu1WeaHXqL3Gh7uKt8g"
      },
      "forgotPassword": {
        "handler": "server/handlers/cognito/forgotPassword.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-forgotPassword",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ForgotPasswordLambdaVersion2wLmG6OFdQw3R3NYSjnnV0u6IP1UPNYJ7iYYrE9CFY"
      },
      "resetPassword": {
        "handler": "server/handlers/cognito/resetPassword.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-resetPassword",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ResetPasswordLambdaVersionfQ2hIkIZktTPENOJXZakLvmbnTxct1iYilJGyXEFNM"
      },
      "logoutUser": {
        "handler": "server/handlers/cognito/logoutUser.handler",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": "*",
            "Role": {
              "Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
              ]
            }
          }
        ],
        "events": [],
        "name": "fireplatform-dev-logoutUser",
        "package": {
          "artifact": ".serverless/fireplatform.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "LogoutUserLambdaVersionrBzV9dbJ9lN0gcWXMsn0D66Mu0quJi0fcApvxIqoFPo"
      }
    },
    "resources": {
      "Resources": {
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "dev-fireplatform-ui"
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "dev-user-pool",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Schema": [
              {
                "Name": "given_name",
                "AttributeDataType": "String",
                "Mutable": true
              },
              {
                "Name": "family_name",
                "AttributeDataType": "String",
                "Mutable": true
              },
              {
                "Name": "email",
                "AttributeDataType": "String",
                "Mutable": false
              },
              {
                "Name": "password",
                "AttributeDataType": "String",
                "Mutable": true
              }
            ]
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "dev-user-pool-client",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH",
              "ALLOW_USER_PASSWORD_AUTH"
            ],
            "GenerateSecret": false
          }
        },
        "LambdaExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "lambda-execution-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "fireplatform",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/fireplatform/dev/1696243461349-2023-10-02T10:44:21.349Z",
    "artifact": ""
  }
}