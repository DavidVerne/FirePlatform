{"version":3,"file":"static/js/877.757a5d0d.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthResetPassword.js","views/pages/authentication/authentication/ResetPassword.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","// material-ui\nimport { Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n  <Stack direction=\"row\" justifyContent=\"space-between\">\n    {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n      berrydashboard.io\n    </Typography>\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n      &copy; codedthemes.com\n    </Typography> */}\n  </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  offset: PropTypes.number,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n  children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useState, useEffect } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput\n} from '@mui/material';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport AWS from 'aws-sdk';\nimport { connect } from 'react-redux';\n\nconst AuthResetPassword = ({ username, ...others }) => {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleClickShowConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const [formData, setFormData] = useState({\n    username: username,\n    verificationCode: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [matchedPasswords, setMatchedPasswords] = useState(false); \n\n  useEffect(() => {\n    const { verificationCode, password, confirmPassword } = formData;\n    const passwordsMatch = password === confirmPassword && password !== '' && (verificationCode !== '' && verificationCode.length >= 6);\n    setMatchedPasswords(passwordsMatch);\n  }, [formData]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleCognitoLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const lambda = new AWS.Lambda();\n\n      const payload = {\n        verificationCode: formData.verificationCode,\n        username: formData.username,\n        password: formData.password,\n      };\n  \n      const params = {\n        FunctionName: 'resetPassword',\n        InvocationType: 'RequestResponse',\n        Payload: JSON.stringify(payload),\n      };\n  \n      const response = await lambda.invoke(params).promise();\n\n      const responseBody = JSON.parse(response.Payload);\n  \n      if (responseBody.success) {\n        console.error('User registration successful:', responseBody.success);\n        setSuccessMessage('Password successfully changed.');\n      } else {\n        console.error('User registration failed:', responseBody.error);\n        setSuccessMessage('Failed to change password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n          </Box>\n        </Grid>\n        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          password: '',\n          confirmPassword: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          verificationCode: Yup.string().min(6, 'Verification code must be at least 6 characters').max(6).required('Cannot be empty'),\n          password: Yup.string()\n            .min(8, 'Password must be at least 8 characters')\n            .required('Password is required'),\n          confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Confirm password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleCognitoLogin} {...others}>\n            <FormControl fullWidth error={Boolean(touched.verificationCode && errors.verificationCode)} sx={{ ...theme.typography.customInput }}>\n                <InputLabel htmlFor=\"outlined-adornment-verificationCode-register\">Verification code</InputLabel>\n                <OutlinedInput\n                    sx={{\n                      fontSize: '20px',\n                  }}\n                    id=\"outlined-adornment-verificationCode-register\"\n                    type=\"text\"\n                    value={values.verificationCode}\n                    name=\"verificationCode\"\n                    onBlur={handleBlur}\n                    onChange={(e) => {\n                        if (e.target.value.length <= 6) {\n                            handleChange(e); \n                            handleInputChange(e);\n                          }\n                    }}\n                    inputProps={{\n                        maxLength: 6,\n                    }}\n                />\n                {touched.verificationCode && errors.verificationCode && (\n                    <FormHelperText error id=\"standard-weight-helper-text--register\">\n                    {errors.verificationCode}\n                    </FormHelperText>\n                )}\n            </FormControl>\n\n            <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={showPassword ? 'text' : 'password'}\n                value={formData.password}\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e); \n                  handleInputChange(e);\n                }}\n                required\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n                inputProps={{}}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText error id=\"standard-weight-helper-text-password\">\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl fullWidth error={Boolean(touched.confirmPassword && errors.confirmPassword)} sx={{ ...theme.typography.customInput }}>\n              <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-confirm-password\"\n                type={showConfirmPassword ? 'text' : 'password'}\n                value={formData.confirmPassword}\n                name=\"confirmPassword\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e); \n                  handleInputChange(e);\n                }}\n                required\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle confirm password visibility\"\n                      onClick={handleClickShowConfirmPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Confirm password\"\n                inputProps={{}}\n              />\n              {touched.confirmPassword && errors.confirmPassword && (\n                <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\n                  {errors.confirmPassword}\n                </FormHelperText>\n              )}\n            </FormControl>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button \n                  disableElevation \n                  disabled={!matchedPasswords}\n                  fullWidth \n                  size=\"large\" \n                  type=\"submit\" \n                  variant=\"contained\" \n                  color=\"secondary\">\n                  Submit\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n      {successMessage && (\n        <div className=\"success-message\">\n          {successMessage}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n    username: state.user.username,\n  });\n  \n  export default connect(mapStateToProps)(AuthResetPassword);\n","import { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthResetPassword from '../auth-forms/AuthResetPassword';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\nimport {\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useMediaQuery\n} from '@mui/material';\n\n// ================================|| RESET PASSWORD ||================================ //\n\nconst ResetPassword = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                            Reset Password\n                          </Typography>\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'center'}>\n                            A verification code was sent to your email. Please enter it below along with your new password.\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthResetPassword />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Typography \n                        component={Link} \n                        to='/login/' \n                        variant=\"subtitle1\" sx={{\n                            textDecoration: 'none',\n                            '&:hover': {\n                            textDecoration: 'underline',\n                            },\n                        }}\n                      >\n                        Return to login\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default ResetPassword;\n"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsx","Stack","direction","justifyContent","AnimateButton","forwardRef","_ref","ref","_scale","_scale2","offset1","offset2","children","type","offset","scale","x","cycleX","useCycle","y","cycleY","motion","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","connect","state","username","user","others","useTheme","scriptedRef","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","successMessage","setSuccessMessage","handleClickShowPassword","handleClickShowConfirmPassword","handleMouseDownPassword","event","preventDefault","formData","setFormData","verificationCode","password","confirmPassword","matchedPasswords","setMatchedPasswords","passwordsMatch","length","handleInputChange","e","name","value","target","prevFormData","handleCognitoLogin","async","lambda","AWS","payload","params","FunctionName","InvocationType","Payload","JSON","stringify","response","invoke","promise","responseBody","parse","success","console","error","_jsxs","_Fragment","Grid","container","spacing","item","alignItems","display","Divider","orientation","Formik","initialValues","submit","validationSchema","Yup","shape","min","max","required","oneOf","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","err","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","fontSize","id","onBlur","onChange","inputProps","maxLength","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","label","mt","Button","disableElevation","disabled","variant","color","className","ResetPassword","matchDownSM","useMediaQuery","breakpoints","down","m","mb","AuthCardWrapper","Link","to","Logo","Typography","secondary","main","gutterBottom","textAlign","AuthResetPassword","component","textDecoration"],"sourceRoot":""}