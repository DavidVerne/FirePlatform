{"version":3,"file":"static/js/289.4b898e09.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthAuthorize.js","views/pages/authentication/authentication/Authorize.js"],"sourcesContent":["// material-ui\nimport { Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n  <Stack direction=\"row\" justifyContent=\"space-between\">\n    {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n      berrydashboard.io\n    </Typography>\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n      &copy; codedthemes.com\n    </Typography> */}\n  </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  offset: PropTypes.number,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n  children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  OutlinedInput,\n  useMediaQuery\n} from '@mui/material';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport AWS from 'aws-sdk';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// ===========================|| AUTHORIZE ||=========================== //\n\nconst AuthAuthorize = ({ username, ...others }) => {\n\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  // success message from lambda\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // AWS Cognito Variables\n  const [formData, setFormData] = useState({\n    username: username,\n    verificationCode: '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  // Authorize user in Cognito\n  const handleAuthorization = async (e) => {\n    e.preventDefault();\n  \n    const lambda = new AWS.Lambda();\n    const lambdaFunctionName = 'authorizeUser'; \n    const params = {\n      FunctionName: lambdaFunctionName,\n      InvocationType: 'RequestResponse', \n      Payload: JSON.stringify({  \n        username: formData.username,      \n        verificationCode: formData.verificationCode \n      }),\n    };\n  \n    try {\n      // Invoke the Lambda function\n      const response = await lambda.invoke(params).promise();\n      \n      // Handle the Lambda function response here\n      const responseBody = JSON.parse(response.Payload);\n  \n      // Additional handling based on the Lambda response...\n      if (responseBody.success) {\n        // Set the success message\n        setSuccessMessage(\n          <>\n            Authorization successful. You can now{' '}\n            <Link to=\"/login\">log in</Link>.\n          </>\n        );\n      } else {\n        // Handle other cases or display an error message\n        setSuccessMessage('Authorization failed. Please request a new verification code.');\n      }\n    } catch (error) {\n      console.error('Error invoking Lambda:', error);\n    }\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <Box sx={{ alignItems: 'center', display: 'flex' }}>\n             <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n             <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n          </Box>\n         </Grid>\n         <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n       </Grid>\n       </Grid>\n      <Formik\n        initialValues={{\n          verificationCode: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          verificationCode: Yup.string().min(6, 'Verification code must be at least 6 characters').max(6).required('Cannot be empty')\n        })}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleAuthorization} {...others}>\n            <Grid container spacing={matchDownSM ? 0 : 2}>\n            <Grid item xs={12} sm={12}>\n                <FormControl fullWidth error={Boolean(touched.verificationCode && errors.verificationCode)} sx={{ ...theme.typography.customInput }}>\n                <InputLabel htmlFor=\"outlined-adornment-verificationCode-register\">Verification Code</InputLabel>\n                <OutlinedInput\n                    sx={{\n                      fontSize: '20px',\n                  }}\n                    type=\"text\"\n                    value={values.verificationCode}\n                    name=\"verificationCode\"\n                    onBlur={handleBlur}\n                    onChange={(e) => {\n                        if (e.target.value.length <= 6) {\n                            handleChange(e); \n                            handleInputChange(e);\n                          }\n                    }}\n                    inputProps={{\n                        maxLength: 6,\n                    }}\n                />\n                {touched.verificationCode && errors.verificationCode && (\n                    <FormHelperText error id=\"standard-weight-helper-text--register\">\n                    {errors.verificationCode}\n                    </FormHelperText>\n                )}\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n              </Grid>\n            </Grid>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n              <Button\n                disableElevation\n                disabled={values.verificationCode.length !== 6}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                >\n                  Submit\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n      {successMessage && (\n        <div className=\"success-message\">\n          {successMessage}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  username: state.user.username,\n});\n\nexport default connect(mapStateToProps)(AuthAuthorize);","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthAuthorize from '../auth-forms/AuthAuthorize';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport {\n  Button,\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useMediaQuery\n} from '@mui/material';\nimport AWS from 'aws-sdk';\nimport { connect } from 'react-redux';\nimport { BusAlertTwoTone } from '@mui/icons-material';\n\n// ================================|| AUTHORIZE ||================================ //\n\nconst Authorize = (username) => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  // success message from lambda\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  console.log('username: ', username);\n\n  // Resend confirmation code\n  const resendAuthorizationCode = async (e) => {\n    e.preventDefault();\n  \n    const lambda = new AWS.Lambda();\n    const lambdaFunctionName = 'resendVerificationCode'; \n    const params = {\n      FunctionName: lambdaFunctionName,\n      InvocationType: 'RequestResponse', \n      Payload: JSON.stringify({  \n        username: username\n      }),\n    };\n  \n    try {\n      // Invoke the Lambda function\n      const response = await lambda.invoke(params).promise();\n      \n      // Handle the Lambda function response here\n      const responseBody = JSON.parse(response.Payload);\n  \n      // Additional handling based on the Lambda response...\n      if (responseBody.success) {\n        // Set the success message\n        setSuccessMessage('A new verification code has been sent to your email.');\n      } else {\n        // Handle other cases or display an error message\n        setSuccessMessage('Request failed. Please return to the sign up page.');\n      }\n    } catch (error) {\n      console.error('Error invoking Lambda:', error);\n    }\n  };\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                            Enter verification code\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthAuthorize />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Button \n                      sx={{\n                        textDecoration: 'none',\n                        backgroundColor: 'transparent',\n                        '&:hover': {\n                          textDecoration: 'underline',\n                          backgroundColor: 'transparent',\n                        },\n                      }}\n                      id=\"resend-verification-button\"\n                      onClick={resendAuthorizationCode}\n                      variant=\"subtitle1\" \n                      >\n                        Resend verification code\n                      </Button>\n                      {successMessage && (\n                        <div className=\"success-message\">\n                          {successMessage}\n                        </div>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\n// export default Authorize;\nconst mapStateToProps = (state) => ({\n  username: state.user.username,\n});\n\nexport default connect(mapStateToProps)(Authorize);"],"names":["AuthFooter","_jsx","Stack","direction","justifyContent","AnimateButton","forwardRef","_ref","ref","_scale","_scale2","offset1","offset2","children","type","offset","scale","x","cycleX","useCycle","y","cycleY","motion","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","AuthWrapper1","styled","theme","backgroundColor","palette","primary","light","minHeight","connect","state","username","user","others","useTheme","matchDownSM","useMediaQuery","breakpoints","down","successMessage","setSuccessMessage","useState","formData","setFormData","verificationCode","handleAuthorization","async","e","preventDefault","lambda","AWS","params","FunctionName","InvocationType","Payload","JSON","stringify","response","invoke","promise","parse","success","_jsxs","_Fragment","Link","to","error","console","Grid","container","spacing","item","alignItems","display","Divider","orientation","Formik","initialValues","submit","validationSchema","Yup","shape","min","max","required","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","noValidate","onSubmit","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","fontSize","value","name","onBlur","onChange","target","length","prevFormData","handleInputChange","inputProps","maxLength","FormHelperText","id","mt","Button","disableElevation","disabled","size","variant","color","className","log","m","mb","AuthCardWrapper","Logo","Typography","secondary","main","gutterBottom","AuthAuthorize","textDecoration","onClick"],"sourceRoot":""}