# Welcome to Serverless!

service: fireplatform
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-2
  profile: serverlessuser
  environment:
    user_pool_id: { Ref: CognitoUserPool }
    client_id: { Ref: CognitoUserPoolClient }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
      Resource: "*"
      
plugins:
  - serverless-webpack

functions:
  loginUser: 
    handler: user/login.handler
    package:
      exclude:
        - node_modules/**
    events:
      - http:
          path: user/login
          method: post
          cors: true

  signupUser: 
    handler: user/signup.handler
    package:
      exclude:
        - node_modules/**
    events:
      - http:
          path: user/signup
          method: post
          cors: true

  privateAPI:
    handler: user/private.handler
    package:
      exclude:
        - node_modules/**
    events:
      - http: 
          path: user/private
          method: post
          cors: true
          authorizer:
            name: PrivateAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - CognitoUserPool
                - Arn
            claims:
              - email

# you can add CloudFormation resource templates here
resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:provider.stage}-user-pool
        UsernameAttributes:
            - email
        AutoVerifiedAttributes:
            - email
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:provider.stage}-user-pool-client
        UserPoolId:
            Ref: CognitoUserPool
        ExplicitAuthFlows:
              - ADMIN_NO_SRP_AUTH
        GenerateSecret: false

